#include "stdafx.h"
#include <string>
#include <iostream>
using namespace std;
class Animal
{
protected:
	string type;
	int weight;
	string color;
public:
	Animal()
	{
		cout<< "Animal()\n";
		weight= 0;
		type= " ";
		color= " ";
	}
	Animal(int weight,string type, string color)
	{
		cout<< "Animal(int weight,string type, string color)\n";
		this ->weight= weight;
		this ->type= type;
		this ->color= color;
	}
	Animal(const Animal &p)
	{
		cout<< "Animal(const Animal &p)\n";
		weight= p.weight;
		type= p.type;
		color= p.color;
	}
	~Animal()
	{
		cout << "~Animal()\n";
		cout << weight << " " << type << " " << color << endl;
	}
void twotype()
	{
		type = "hare";
	}

	void change();
};
void Animal::change()
{
	weight = 8;
	color = "white";
}

class Skills: public Animal
{
public:
	string skil;
	Skills(): Animal()
	{
		cout<< "Skills(): Animal()\n";
		skil = " ";
	}
	Skills(int weight,string type, string color, string skil):Animal( weight, type, color)
	{
		cout<< "Skills(int weight,string type, string color, string skil):Animal( weight, type, color)\n";
		this ->skil= skil;
	}
	Skills(const Skills& p)
	{
		cout<< "Skills(const Skills &p)\n";
		skil= p.skil;
		weight= p.weight;
		type= p.type;
		color= p.color;
		
	}
	~Skills()
	{
		cout << "~Skills()\n";
		cout << "weight: " << weight << " ,type: " << type << " ,color: " << color << " ,skil: " << skil << endl;
	}
void change_skil (string new_skil)
	{
		skil = new_skil;
	}

};
int main()
{
		Skills k1;
		Skills *k2= new Skills(2, "bird","black","jump");
		delete k2;
		cin.get();
		return 0;
}
